version: '2.1'

networks:
  monitor-net:
    driver: bridge

volumes:
    prometheus_data: {}
    grafana_data: {}

services:

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
      - ./prometheus/hosts:/etc/hosts
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    ports:
#      - 127.0.0.1:9090:9090
      - 9090:9090
#    expose:
#      - 9090
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  alertmanager:
    image: prom/alertmanager:latest
    container_name: alertmanager
    volumes:
      - ./alertmanager:/etc/alertmanager
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
    restart: unless-stopped
    ports:
      - 9093:9093
#    expose:
#      - 9093
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  nodeexporter:
    image: prom/node-exporter:latest
    container_name: nodeexporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    restart: unless-stopped
#    expose:
#      - 9100
    ports:
      - 9100:9100
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

#  cadvisor:
 #   image: gcr.io/google-containers/cadvisor:v0.34.0
  #  container_name: cadvisor
#    volumes:
#      - /:/rootfs:ro
#      - /var/run:/var/run:rw
#      - /sys:/sys:ro
#      - /var/lib/docker:/var/lib/docker:ro
#      #- /cgroup:/cgroup:ro #doesn't work on MacOS only for Linux
#    restart: unless-stopped
#    expose:
#      - 8080
#    networks:
#      - monitor-net
#    labels:
#      org.label-schema.group: "monitoring"

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/defaults.ini:/usr/share/grafana/conf/defaults.ini
      - ./grafana/ldap.toml:/etc/grafana/ldap.toml
    environment:
      - GF_SECURITY_ADMIN_USER=${ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - GF_USERS_ALLOW_SIGN_UP=false
    restart: unless-stopped
    ports:
      - 3000:3000
#    expose:
#      - 3000 
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  pushgateway:
    image: prom/pushgateway:latest
    container_name: pushgateway
    restart: unless-stopped
    expose:
      - 9091
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  web1_nginx:
    image: nginx/nginx-prometheus-exporter:0.9.0 
    container_name:  web1_nginx
    restart: unless-stopped
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"
    command: -nginx.scrape-uri=http://web1.skyroom.online/nginx.status

  web2_nginx:
    image: nginx/nginx-prometheus-exporter:0.9.0 
    container_name:  web2_nginx
    restart: unless-stopped
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"
    command: -nginx.scrape-uri=http://web2.skyroom.online/nginx.status

  web3_nginx:
    image: nginx/nginx-prometheus-exporter:0.9.0 
    container_name:  web3_nginx
    restart: unless-stopped
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"
    command: -nginx.scrape-uri=http://web3.skyroom.online/nginx.status

  web4_nginx:
    image: nginx/nginx-prometheus-exporter:0.9.0 
    container_name:  web4_nginx
    restart: unless-stopped
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"
    command: -nginx.scrape-uri=http://web4.skyroom.online/nginx.status

  web5_nginx:
    image: nginx/nginx-prometheus-exporter:0.9.0 
    container_name:  web5_nginx
    restart: unless-stopped
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"
    command: -nginx.scrape-uri=http://web5.skyroom.online/nginx.status




#  caddy:
#    image: caddy
#    container_name: caddy
#    ports:
#      - "3000:3000"
#      - "9090:9090"
#      - "9093:9093"
#      - "9091:9091"
#    volumes:
#      - /home/devops/service/Docker-Compose-Prometheus-and-Grafana/caddy:/etc/caddy
#    environment:
#      - ADMIN_USER=${ADMIN_USER}
#      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
#    restart: unless-stopped
#    networks:
#      - monitor-net
#    labels:
#      org.label-schema.group: "monitoring"
